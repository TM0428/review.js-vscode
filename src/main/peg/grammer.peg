start
    = _ chapters? _
    ;

chapters "chapters"
    = chapter chapters?

chapter "chapter"
    = headline text:paragraphs?
    ;

// = 章タイトル
headline "headline"
    // TODO caption は inline element
    = level:"="+ bracketArg? braceArg? space* caption:contentInline newline*
    ;

bracketArg "bracket argument"
    = "[" arg:$([^\n\]]*) "]"
    ;

braceArg "brace argument"
    = "{" arg:$([^\n\}]*) "}"
    ;

paragraphs "paragraphs"
    = !"=" paragraph paragraphs?
    ;

paragraph "paragraph"
    = newline* contents newline?
    ;

contents "contents"
    // eof 検出に &. を使っている
    = &. content contents? newline?
    ;

content "content"
    = ( blockElement / inlineElement / content:$(!"//}" [^\r\n@]+) )
    ;

// contents との差は paragraph を切るか切らないか
blockInnerContents
    = blockInnerContent blockInnerContents?
    ;

blockInnerContent
    = ( blockElement / inlineElement / newline / content:$(!"//}" [^\r\n@]+) ) 
    ;

contentInline "inline content"
    = contentInline_subs newline
    ;

contentInline_subs "children of inline content"
    = contentInline_sub contentInline_subs?
    ;

contentInline_sub "child of inline content"
    = content:$([^\r\n@]+)
    / inlineElement
    ;

blockElement "block element"
    = "//" name:az bracketArg* "{" newline blockInnerContents? "//}"
    ;

inlineElement "inline element"
    = "@<" name:$([^>\r\n]+) ">" "{" contentInline_sub* "}"
    ;

// * 箇条書き
ulist "ulist"
    // 行頭から… の指定がない
    = ulistElement (singlelineComment / ulistElement)*
    ;

ulistElement "ulist element"
    = " "+ level:"*"+ text:contentInline
    ;

// 1. 番号付き箇条書き
olist "olist"
    // 行頭から… の指定がない
    = olistElement (singlelineComment / olistElement)*
    ;

olistElement "olist element"
    = " "+ digit "." text:contentInline
    ;

// : 用語リスト
dlist "dlist"
    // 行頭から… の指定がない
    = dlistElement (singlelineComment / dlistElement)*
    ;

dlistElement "dlist element"
    = " "* ":" " " text:contentInline
    ;

singlelineComment "signle line comment"
    = "#@" [^\r\n]* newline
    ;

digit "digits"
    = [0-9]+
    ;

az "lower alphabet"
    = [a-z]+
    ;

newline "newline"
    = "\r\n"
    / "\n"
    ;

_ "spacer"
    = space*
    ;

space "space"
    = [ \t\r\n]
    ;
